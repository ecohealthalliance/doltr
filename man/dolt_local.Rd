% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dolt-local-connection.R
\docType{class}
\name{dolt_local}
\alias{dolt_local}
\alias{DoltLocalDriver-class}
\alias{dbUnloadDriver,DoltLocalDriver-method}
\alias{show,DoltLocalDriver-method}
\alias{DoltLocalConnection-class}
\alias{DoltLocalResult-class}
\alias{dbConnect,DoltLocalDriver-method}
\alias{dbGetInfo,DoltLocalConnection-method}
\alias{show,DoltLocalConnection-method}
\alias{dbDisconnect,DoltLocalConnection-method}
\alias{dbIsValid,DoltLocalConnection-method}
\title{Connect to a local dolt database directory}
\usage{
dolt_local()

\S4method{dbUnloadDriver}{DoltLocalDriver}(drv, ...)

\S4method{show}{DoltLocalDriver}(object)

\S4method{dbConnect}{DoltLocalDriver}(
  drv,
  dir = Sys.getenv("DOLT_DIR", "doltdb"),
  username = Sys.getenv("DOLT_USERNAME", "root"),
  password = Sys.getenv("DOLT_PASSWORD", ""),
  port = Sys.getenv("DOLT_PORT", 3306L),
  host = Sys.getenv("DOLT_HOST", "127.0.0.1"),
  find_port = TRUE,
  find_server = TRUE,
  autocommit = TRUE,
  server_args = list(),
  ...
)

\S4method{dbGetInfo}{DoltLocalConnection}(dbObj, ...)

\S4method{show}{DoltLocalConnection}(object)

\S4method{dbDisconnect}{DoltLocalConnection}(conn, ...)

\S4method{dbIsValid}{DoltLocalConnection}(dbObj, ...)
}
\arguments{
\item{drv}{an object of class \code{DoltLocalDriver}, created by \code{dolt_local()}.}

\item{...}{additional arguments to pass to \code{\link[RMariaDB:dbConnect-MariaDBDriver-method]{RMariaDB}}}

\item{object}{a connection object}

\item{dir}{The dolt directory to serve and connect to}

\item{username}{The username. Defaults to "root"}

\item{password}{The login password.  Defaults to empty.}

\item{port}{The TCP port for connections. Defaults to 3306.}

\item{host}{The IP of the host. Defaults to the local machine, \verb{127.0.0.1}}

\item{find_port}{whether to find an open port if the default is used by another
process}

\item{find_server}{whether to look for another server process serving the same
directory before creating a new one}

\item{autocommit}{Whether to autocommit changes in the \emph{SQL} sense. That is,
to flush pending changes to disk and update the working set.}

\item{server_args}{a list of additional arguments to pass to \code{\link[=dolt_server]{dolt_server()}}}

\item{dbObj}{the database connection}

\item{conn}{the database connection}
}
\description{
\code{dolt_local()} creates a \code{DoltLocalDriver}, which can generate
a \code{DoltLocalConnection}.  Unlike \code{\link[=dolt_remote]{dolt_remote()}} and \code{DoltDriver}, \emph{local}
connections are for dolt databases stored in directories on-disk, and take
a directory name as an argument. The local connection type starts and manages
a \link[=dolt_server]{dolt SQL server} in the background serving that directory,
connects to it and returns the connection. Parameters govern both the server
and connection

Local dolt connection objects contain additional slots including the
database path on-disk and an external pointer to the server process, and
these are returned via \code{dbGetInfo} and displayed in the connection print
method. The \code{dbDisconnect} method kills the background server if no other
processes are connected to it.

Multi-user or other, more complicated networking set-ups should
use \code{\link[=dolt_server]{dolt_server()}} and \code{\link[=dolt_remote]{dolt_remote()}} directly.
}
\seealso{
Other connections: 
\code{\link{dolt_remote}()},
\code{\link{dolt}()}
}
\concept{connections}
